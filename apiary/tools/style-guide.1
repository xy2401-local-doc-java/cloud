<!DOCTYPE html><html prefix="og: http://ogp.me/ns#"><head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>API Style Guide | Apiary Help</title>
  <link rel="stylesheet" href="../../css/main.css?8d147e3a37768b440f679294bd9bc305">

  
    
      <meta name="description" content="Check for company-specific patterns in your team APIs for consistency.">
    
    <meta property="og:title" content="API Style Guide">
    <meta property="og:site_name" content="Apiary.io">
    <meta property="og:type" content="article">
    <meta property="og:url" content="https://help.apiary.io/tools/style-guide/">
    <meta property="og:image" content="https://help.apiary.io/images/apiary_sharing.png">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">

    
      <meta property="og:description" content="Check for company-specific patterns in your team APIs for consistency.">
    

    <meta property="og:site_name" content="Apiary Help">

    
      <meta property="og:see_also" content="https://help.apiary.io/api_101/enhancing-apiary-workflow/">
    

    <meta property="twitter:account_id" content="183960592">

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@apiaryio">
    <meta name="twitter:creator" content="@apiaryio">
    <meta name="twitter:title" content="API Style Guide">

    
      <meta name="twitter:description" content="Check for company-specific patterns in your team APIs for consistency.">
    

    <meta name="twitter:image" content="https://help.apiary.io/images/apiary_sharing.png">
    <meta name="twitter:url" content="https://help.apiary.io/tools/style-guide/">
    <meta name="robots" content="index, follow">
    <link rel="canonical" href="index.html">
    <link rel="dns-prefetch" href="//jsapi.apiary.io">
  

  <link rel="sitemap" type="application/xml" title="Sitemap" href="../../sitemap.xml">
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>


  <body vocab="http://schema.org/" typeof="WebPage">
    <div class="pageWrap">
      <header class="site-header">
  <div class="site-header-inner">
    <a class="site-title" href="https://apiary.io">
      <img src="../../images/oracleapiarylogo.png" alt="Apiary logo">
      <span>Apiary Help</span>
    </a>

    <nav class="site-nav">
      <ul>
        <li><a href="https://apiary.io/how-it-works">How It Works</a></li>
<li><a href="https://apiary.io/plans">Plans</a></li>
<li><a href="https://apiary.io/products">Product</a></li>
<li><a href="../../">Help</a></li>
<li class="hide-sm"><a href="https://apiary.io/company">Company</a></li>
<li><a href="https://login.apiary.io/login">Sign In</a></li>
<li><a class="site-nav-signup" href="https://login.apiary.io/login">Sign Up</a></li>

        <li><a href="javascript:;" class="openMobileNav">&#x2630; Menu</a></li>
      </ul>
    </nav>
  </div>
</header>





      <div class="layout-content">
        <div class="layout-content-inner">
          <div class="page">
  
  <nav class="page-breadcrumbs">
    <ul class="breadcrumbs">
        
        
          <li>
            
              <a href="../../">Apiary Help</a>
            
          </li>
        
          <li>
            
              <a href="../">Tools</a>
            
          </li>
        
          <li class="active">
            
              API Style Guide
            
          </li>
        
    </ul>
  </nav>



  <aside class="page-aside" property="hasPart" typeof="WPSideBar">
    <aside>
  <div class="aside-category">
    <h2 class="aside-category-title"><a href="../" class="category-link">Apiary Tools</a></h2>
    <ul class="aside-category-page-list">
      
      
        <li><a href="../apiary-editor/">Apiary Editor</a></li>
      
        <li><a href="../interactive-documentation/">Interactive Documentation</a></li>
      
        <li><a href="../mock-server/">Mock Server</a></li>
      
        <li><a href="../api-inspector/">API Inspector</a></li>
      
        <li><a href="../github-sync/">GitHub Sync</a></li>
      
        <li><a href="../github-integration/">GitHub Integration</a></li>
      
        <li><a href="../automated-testing/">Automated Testing</a></li>
      
        <li><a href="../apiary-cli/">Apiary CLI</a></li>
      
        <li><a href="../github-enterprise-integration/">GitHub Enterprise (GHE) Integration</a></li>
      
        <li><a href="../code-examples/">Integrated Code Examples</a></li>
      
        <li><a href="../embed/">Embed documentation</a></li>
      
        
      
        
      
        
      
        
      
        
      
        <li><a href="index.html">API Style Guide</a></li>
      
        <li><a href="../troubleshooting-github/">Troubleshooting GitHub Sync and Integration</a></li>
      
        <li><a href="../version-history/">Version history</a></li>
      
    </ul>
  </div>

  <div class="aside-category">
    <h2 class="aside-category-title"><a href="../../faq/" class="category-link">FAQs</a></h2>
  </div>

  <div class="aside-category">
    <h2 class="aside-category-title">Resources</h2>
    <ul class="aside-category-page-list">
      <li><a href="../../api_101/api_blueprint_tutorial/" class="category-link-resources">API Blueprint Tutorial</a></li>
      <li><a href="http://support.apiary.io/forums/120125-general" class="category-link-resources" target="blank">Feedback</a></li>
      <li><a href="https://apiary.io/support" class="category-link-resources" target="blank">Support</a></li>
    </ul>
  </div>
</aside>

  </aside>

  <article class="page-content" role="main" property="mainEntityOfPage" typeof="Article">
    <header class="page-header">
      <h1 class="page-title" property="headline">API Style Guide</h1>
    </header>
    <div property="text" class="entry-content">
      <div class="block block--lead">
        
<p>API style guide helps everyone to adhere to basic API design patterns and conventions.</p>

      </div>

<p>Apiary Style Guide enables you to check multiple API description documents for consistency. The real benefit is the developer experience&#x2014;consistency means predictability.
Apiary Style Guide can be used within the <a href="https://apiary.io">Apiary.io</a> web site or using <a href="../apiary-cli/">Apiary CLI</a>.</p>

<p class="inBrowser"><img src="../../images/style-guide/apiary-style-guide-tests.png" alt="Check API&apos;s"></p>

<p>With Apiary Style Guide, API designers receive real-time feedback during the API design process.</p>

<p class="inBrowser"><img src="../../images/style-guide/apiary-style-guide-feedback.png" alt="Real-time validation"></p>

<p>Inconsistencies are caught very early in the cycle, helping you to avoid boring and expensive code refactor after APIs have been developed, deployed, and consumed.</p>

<h2 id="api-design-assertion-language">API Design Assertion Language:</h2>

<p>To a define a Design Assertion, two parts are needed: <strong>Functions Definition</strong> and <strong>Rules Definition</strong></p>

<p><img src="../../images/style-guide/styles.png" alt="Definitions"></p>

<h3 id="functions-definition">Functions Definition:</h3>

<p>A set of JavaScript functions used for validations.</p>

<pre><code class="language-javascript">/*
Checks if response to DELETE request contains body

@targets: Action
@minim: true
*/
function validateDeleteNoBody(action) {
  for (const transaction of action.transactions || []) {
    if (lodash.get(transaction, &apos;request.method&apos;, &apos;&apos;).toValue().toLocaleLowerCase() === &apos;delete&apos; &amp;&amp; lodash.get(transaction, &apos;request.messageBody&apos;)) {
      return &apos;DELETE request must not have a body.&apos;;
    }
  }
  return true;
}
</code></pre>

<p>Each function has one input parameter - <a href="https://github.com/refractproject/minim-api-description">minim element</a> if <code>@minim: true</code> annotation is present or
(deprecated) JSON object found on desired <a href="#supported-targets">path</a> in <a href="https://github.com/refractproject/refract-spec/blob/master/namespaces/api-description-namespace.md">refract tree</a>. Function is not executed if no object is found.
The function must return true if validation passes or a string which describes reason of failure if validation fails.
Each function should have a block comment which describes its purpose. Comments can contain <code>@targets</code> annotations with comma-separated lists of
allowed targets to which this function can be applied.
All supported targets are allowed if <code>@targets</code> annotation is not defined:</p>

<h3 id="supported-targets">Supported targets</h3>

<pre><code class="language-md">api

meta
title
copy

resourceGroup
resourceGroup.title
resourceGroup.copy

resource
resource.title
resource.copy
resource.href
resource.hrefVariables

transition
transition.title
transition.method
transition.copy
transition.hrefVariables
transition.requestAndResponse

request
request.copy
request.messageBody
request.messageBodySchema
request.headers
request.header

response
response.statusCode
response.copy
response.messageBody
response.messageBodySchema
response.headers
response.header

header
</code></pre>

<h3 id="rules-definition">Rules Definition:</h3>

<p>A list of rules connecting <a href="#functions-definition">function definitions</a> to
<a href="https://github.com/refractproject/minim-api-description">minim elements</a> targets.</p>

<p>Each rule has the following attributes:</p>

<ul>
  <li><code>intent</code>: intent/description of this rule</li>
  <li><code>ruleName</code>: human readable name for rule</li>
  <li><code>functionName</code>: function name from the <a href="#functions-definition">function definition</a></li>
  <li><code>target</code>: <a href="#supported-targets">Minim/Refract Path</a></li>
</ul>

<pre><code class="language-json">[
  {
    &quot;intent&quot;: &quot;All `id` keys in request JSON body object should be in format of UUID because ...&quot;,
    &quot;ruleName&quot;: &quot;request UUID id&quot;,
    &quot;functionName&quot;: &quot;validateUUIDInJsonIdKeys&quot;,
    &quot;target&quot;: &quot;Request_Body&quot;
  },
  {
    &quot;intent&quot;: &quot;All `id` keys in response JSON body object should be in format of UUID because ...&quot;,
    &quot;ruleName&quot;: &quot;response UUID id&quot;,
    &quot;functionName&quot;: &quot;validateUUIDInJsonIdKeys&quot;,
    &quot;target&quot;: &quot;Response_Body&quot;
  }
]
</code></pre>

<h2 id="real-world-example">Real world example</h2>

<p>We need to make sure that all APIs use the defined combination of request method and response status code  for all API endpoints. Valid combinations would be:</p>

<ul>
  <li>200: GET, DELETE, PATCH</li>
  <li>201: POST</li>
  <li>202: POST, DELETE, PATCH</li>
  <li>206: GET</li>
</ul>

<h4 id="set-up-environment">Set up environment:</h4>

<ol>
  <li>install <a href="../apiary-cli/">Apiary CLI</a></li>
  <li>get and set <a href="../apiary-cli/#generating-an-authentication-token">Authentication Token</a></li>
</ol>

<h3 id="create-examples">Create examples</h3>

<p>Create example API description documents that should pass and fail for your style guide - notice the <code>POST</code> request and <code>200</code> response combination:</p>

<pre><code class="language-apib">FORMAT: 1A

# test FAIL

## test [/test]


### test post [POST]

+ Request (application/json)

        {
            &quot;id&quot;: 1
        }

+ Response 200 (application/json)

        {
            &quot;id&quot;: 1
        }

</code></pre>

<p>Save it to <code>fail.apib</code>.</p>

<pre><code class="language-apib">FORMAT: 1A

# test PASS

## test [/test]


### test post [POST]

+ Request (application/json)

        {
            &quot;id&quot;: 1
        }

+ Response 201 (application/json)

        {
            &quot;id&quot;: 1
        }
</code></pre>

<p>Save it to <code>pass.apib</code>.</p>

<p>The more examples you create the better.</p>

<h4 id="develop-a-validation-function">Develop a validation function:</h4>

<p>We should choose the correct <code>target</code> at first. The <code>Action</code> target
seems to be the most suitable for this style guide as we need to know/compare the request method and the response status code
(<code>Action</code> element is the parent element of the <code>Request</code> and <code>Response</code> elements) and set up the rule:</p>

<p><code>json
 [
   {
     &quot;functionName&quot;: &quot;validateProperActionStatusCode&quot;,
     &quot;target&quot;: &quot;Action&quot;
   }
 ]
</code></p>

<p>Save it to <code>rules.json</code> file</p>

<p>And create the validation function itself (notice the code comments):</p>

<pre><code class="language-js">/*
helper function which validates correct combination of method and status code
*/
function _validStatusAndMethod(status, method) {
  //define valid combinations
  const statusCodeMap = {
    200: [&apos;GET&apos;, &apos;DELETE&apos;, &apos;PATCH&apos;],
    201: [&apos;POST&apos;],
    202: [&apos;POST&apos;, &apos;DELETE&apos;, &apos;PATCH&apos;],
    206: [&apos;GET&apos;],
  };

  //lets convert input to primitives if it is a minim element
  if (status &amp;&amp; status.toValue) {
    status = status.toValue();
  }

  if (method &amp;&amp; method.toValue) {
    method = method.toValue();
  }

  //look up in statusCodeMap and return true if given status and method is valid combination
  if (statusCodeMap[status] === undefined) { return false; }
  if (statusCodeMap[status].includes(method)) { return true; }
  return false;
}


// Validation function itself
/*
Validates proper combinations of request method and response status code.
Possible combinations are:
- 200: GET, DELETE, PATCH
- 201: POST
- 202: POST, DELETE, PATCH
- 206: GET

we&apos;ll specify `Action` as one and only allowed target because following code does not makes sense or would fail for any other target
@targets: Action
@minim: true
*/
function validateProperActionStatusCode(action) {
  //iterate over all transactions for given Action
  for (const transaction of action.transactions || []) {
    //check status code and method using helper method defined above.
    //notice that lodash lib. is provided but you are not allowed to require/import any other libraries
    if (!_validStatusAndMethod(lodash.get(transaction, &apos;response.statusCode&apos;), lodash.get(transaction, &apos;request.method&apos;))) {
      //return string describing reason of failing if validation has failed
      return &apos;No valid combination of status code and method&apos;;
    }
  }
  //return true if all validations have passed
  return true;
}

</code></pre>

<p>Save it to <code>functions.js</code> file</p>

<h5 id="lets-test-it">Lets test it!</h5>

<pre><code class="language-bash">apiary styleguide --add=pass.apib

All tests have passed

</code></pre>

<p>We should get exit code <code>0</code> and <code>All tests has passed</code> success message.</p>

<pre><code class="language-bash">apiary styleguide --add=fail.apib


    validateProperActionStatusCode
      [X] FAILED: Action #0 on lines 7 - 19 - `No valid combination of status code and method`

</code></pre>

<p>We can also get the json output (for further machine processing) by specifying the <code>--json</code> parameter</p>

<pre><code class="language-bash">apiary styleguide --add=fail.apib --json
</code></pre>

<p>We should get a verbose json output with all the available information included.</p>

<pre><code class="language-json">[
  {
    &quot;functionName&quot;: &quot;validateProperActionStatusCode&quot;,
    &quot;target&quot;: &quot;Action&quot;,
    &quot;code&quot;: &quot;function validateProperActionStatusCode(action) {\n  //iterate over all transaction for given Action\n  for (const transaction of action.transactions || []) {\n    //check status code and method using helper method defined above.\n    //notice that lodash lib. is provided but you are not allowed to require/import any other libraries\n    if (!_validStatusAndMethod(lodash.get(transaction, &apos;response.statusCode&apos;), lodash.get(transaction, &apos;request.method&apos;))) {\n      //return string describing reason of failing if validation has failed\n      return &apos;No valid combination of status code and method&apos;;\n    }\n  }\n  //return true if all validations has passed\n  return true;\n}&quot;,
    &quot;functionComment&quot;: &quot; Validation function it self\nValidates proper combinations of request method and response status code.\nPossible combinations are:\n- 200: GET, DELETE, PATCH\n- 201: POST\n- 202: POST, DELETE, PATCH\n- 206: GET\n\nwe&apos;ll specify `Action` as one and only allowed targets because following code does not makes sense or would fail for any other target\n@targets: Action\n@minim: true\n&quot;,
    &quot;allowedPaths&quot;: [
      &quot;Action&quot;
    ],
    &quot;minim&quot;: true,
    &quot;ref&quot;: [
      &quot;Action-0&quot;
    ],
    &quot;results&quot;: [
      {
        &quot;validatorError&quot;: false,
        &quot;result&quot;: &quot;No valid combination of status code and method&quot;,
        &quot;path&quot;: &quot;Action-0&quot;,
        &quot;data&quot;: { ...truncated... },
        &quot;sourcemap&quot;: [
          [
            43,
            168
          ]
        ],
        &quot;sourcemapLines&quot;: {
          &quot;start&quot;: 7,
          &quot;end&quot;: 19
        }
      }
    ]
  }
]
</code></pre>

<p>Notice the <code>result</code> key in <code>results</code> array - we just need to see if validation has passed or not.</p>

<p>If you are satisfied, you can add the new rule and function(s) to the Apiary style guides for your team by navigating to
<em>Team settings</em> -&gt; <em>Styles</em> -&gt; <em>Assertions</em> -&gt; <em>Advanced mode</em>. The rule is applied for all team APIs from this moment:</p>

<p class="inBrowser"><img src="../../images/style-guide/editor-styleguide.png" alt="Editor validation"></p>


    </div>

    <div class="pageFeedback">
  <div class="pageFeedback--initial">
    <div class="pageFeedback--question">
      Was this page useful?
    </div>
    <div class="pageFeedback--yes"></div>
    <div class="pageFeedback--no"></div>
  </div>
  <div class="pageFeedback--thankYouBlock">
    Thank you for the feedback!
  </div>
  <div class="pageFeedback--whatWentWrong">
    <div class="pageFeedback--whatWentWrongTitle">What went wrong?</div>
    <label><input type="checkbox" id="droids" value="droids"> It&#x2019;s not what I was looking for</label>
    <label><input type="checkbox" id="simplify" value="simplify"> It was hard to understand</label>
    <label><input type="checkbox" id="else" value="else"> Something else</label>
  </div>
</div>

    
  <div class="relatedTopics">
    <h2 class="relatedTopics__title">Related topics</h2>
    <ul class="relatedTopics__list">
      
        <li><a href="../../api_101/enhancing-apiary-workflow/">Enhancing Apiary Workflow</a><br></li>
      
    </ul>
  </div>


  </article>
</div>

        </div>
      </div>

      <footer>
  <div class="footerRow">
    <div class="footerColumns">
      <div class="footerColumn">
        <h4 class="footerTitle">Platform</h4>
        <ul class="footerList">
          <li><a class="footerListLink" href="https://apiary.io/how-it-works">How It Works</a></li>
          <li><a class="footerListLink" href="https://apiary.io/products">Product</a></li>
          <li><a class="footerListLink" href="https://enterprise.apiary.io/">Enterprise</a></li>
          <li><a class="footerListLink" href="https://apiary.io/plans">Plans</a></li>
          <li><a class="footerListLink" href="../../">Help</a></li>
        </ul>
      </div>
      <div class="footerColumn">
        <h4 class="footerTitle">Company</h4>
        <ul class="footerList">
          <li><a class="footerListLink" href="http://blog.apiary.io/">Blog</a></li>
          <li><a class="footerListLink" href="https://apiary.io/company">Team</a></li>
          <li><a class="footerListLink" href="https://apiary.io/jobs">Jobs</a></li>
          <li><a class="footerListLink" href="https://apiary.io/contact">Contact</a></li>
          <li><a class="footerListLink" href="https://static.apiary.io/assets/29b1ca7e9b4668542aa05ccd5f9338a6.zip">Press Kit</a></li>
        </ul>
      </div>
      <div class="mobileBreak"></div>
      <div class="footerColumn">
        <h4 class="footerTitle">Open Source</h4>
        <ul class="footerList">
          <li><a class="footerListLink" href="https://apiblueprint.org">API Blueprint</a></li>
          <li><a class="footerListLink" href="https://github.com/apiaryio/snowcrash">Snow Crash</a></li>
          <li><a class="footerListLink" href="https://github.com/apiaryio/gavel">Gavel</a></li>
          <li><a class="footerListLink" href="http://dredd.readthedocs.org/">Dredd</a></li>
          <li><a class="footerListLink" href="../apiary-cli/">Apiary CLI</a></li>
        </ul>
      </div>
      <div class="footerColumn">
        <h4 class="footerTitle">Social</h4>
        <ul class="footerList">
          <li><a class="footerListLink" href="https://github.com/apiaryio">GitHub</a></li>
          <li><a class="footerListLink" href="https://twitter.com/apiaryio">Twitter</a></li>
          <li><a class="footerListLink" href="https://facebook.com/apiary.io">Facebook</a></li>
        </ul>
      </div>
    </div>
  </div>

  <div class="footerRow">
    <p class="footerCopyright">Copyright &#xA9; 2017, Oracle and/or its affiliates. All rights reserved. Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners. <span class="footerCopyrightLinks">&#x2022; <a href="https://apiary.io/tos" class="footerCopyrightLink">Terms</a> &#x2022; <a href="https://apiary.io/privacy" class="footerCopyrightLink">Privacy</a></span></p>
  </div>
</footer>

    </div>
    <nav class="mobileNav">
  <div class="mobileNav-inner">
    <a href="javascript:;" class="closeMobileNav">&#x2715; Close menu</a>
    <ul class="mobileNav-list">
      <li><a href="../../">Docs home</a></li>
      <li><a href="https://apiary.io">Back to Apiary.io</a></li>
      <li><a href="https://apiary.io/how-it-works">How It Works</a></li>
<li><a href="https://apiary.io/plans">Plans</a></li>
<li><a href="https://apiary.io/products">Product</a></li>
<li><a href="../../">Help</a></li>
<li class="hide-sm"><a href="https://apiary.io/company">Company</a></li>
<li><a href="https://login.apiary.io/login">Sign In</a></li>
<li><a class="site-nav-signup" href="https://login.apiary.io/login">Sign Up</a></li>

    </ul>
    <aside>
  <div class="aside-category">
    <h2 class="aside-category-title"><a href="../" class="category-link">Apiary Tools</a></h2>
    <ul class="aside-category-page-list">
      
      
        <li><a href="../apiary-editor/">Apiary Editor</a></li>
      
        <li><a href="../interactive-documentation/">Interactive Documentation</a></li>
      
        <li><a href="../mock-server/">Mock Server</a></li>
      
        <li><a href="../api-inspector/">API Inspector</a></li>
      
        <li><a href="../github-sync/">GitHub Sync</a></li>
      
        <li><a href="../github-integration/">GitHub Integration</a></li>
      
        <li><a href="../automated-testing/">Automated Testing</a></li>
      
        <li><a href="../apiary-cli/">Apiary CLI</a></li>
      
        <li><a href="../github-enterprise-integration/">GitHub Enterprise (GHE) Integration</a></li>
      
        <li><a href="../code-examples/">Integrated Code Examples</a></li>
      
        <li><a href="../embed/">Embed documentation</a></li>
      
        
      
        
      
        
      
        
      
        
      
        <li><a href="index.html">API Style Guide</a></li>
      
        <li><a href="../troubleshooting-github/">Troubleshooting GitHub Sync and Integration</a></li>
      
        <li><a href="../version-history/">Version history</a></li>
      
    </ul>
  </div>

  <div class="aside-category">
    <h2 class="aside-category-title"><a href="../../faq/" class="category-link">FAQs</a></h2>
  </div>

  <div class="aside-category">
    <h2 class="aside-category-title">Resources</h2>
    <ul class="aside-category-page-list">
      <li><a href="../../api_101/api_blueprint_tutorial/" class="category-link-resources">API Blueprint Tutorial</a></li>
      <li><a href="http://support.apiary.io/forums/120125-general" class="category-link-resources" target="blank">Feedback</a></li>
      <li><a href="https://apiary.io/support" class="category-link-resources" target="blank">Support</a></li>
    </ul>
  </div>
</aside>

  </div>
</nav>

    
  <script>
    window._trackJs = {
      token: '60775d2a4c124659ba6585cf31909f85',
      application: 'docs-portal'
    };

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-18252923-8', 'auto');
    ga('send', 'pageview');
  </script>





<script type="text/javascript" src="../../assets/main-9de9a2eabd0d23c2aefea3d1fee69cd4bb776643ddb27cfeb7da88d5371bc1cb.js?8d147e3a37768b440f679294bd9bc305"></script>



  


</body></html>